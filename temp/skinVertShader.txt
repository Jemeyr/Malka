#version 130

in vec3 position;
in vec3 normal;
in vec2 texCoord;
in vec3 jointWeights;
in ivec3 jointIndices;

out vec3 fragNorm;
out vec2 fragTexCoord;

uniform vec3 cameraPosition;
uniform mat4 viewPerspective;
uniform mat4 model;
uniform mat4 joints[32];
uniform mat4 jointInvBinds[32];

void main(){
	//vec4 worldSpaceNormal = model * vec4(normal, 0.0);

	fragNorm = normalize(normal.xyz);
	fragTexCoord = texCoord;
	
	vec4 pos = vec4(position, 1.0);
	vec4 outpos = vec4(0.0);
	
//	mat4 comp = mat4(0.0);
	
	for(int i = 0; i < 3; i++){
//		comp = comp + (jointWeights[jointIndices[i]] * joints[jointIndices[i]] * jointInvBinds[0]);

 		vec4 comp = joints[jointIndices[i]] * jointInvBinds[jointIndices[i]] * pos;
		outpos = outpos + (comp * jointWeights[i]);
	}
	outpos = ((jointWeights[1] * joints[1] * jointInvBinds[0]) + (jointWeights[0] * joints[0] * jointInvBinds[0])) * pos;
//	outpos = ((jointWeights[jointIndices[0]] * joints[jointIndices[0]] * jointInvBinds[0]) +
//			  (jointWeights[jointIndices[1]] * joints[jointIndices[1]] * jointInvBinds[0])) * pos;
	
	
//	outpos = comp * pos;
	
	gl_Position = viewPerspective * model * outpos;
}
		